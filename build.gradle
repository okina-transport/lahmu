buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlint_version"
        classpath "org.owasp:dependency-check-gradle:$owasp_dependency_check_version"
        classpath "io.ktor:ktor-client-core:$ktor_version"
    }
}

plugins {
    id "org.sonarqube" version "2.8"
    id 'jacoco'
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'application'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'org.owasp.dependencycheck'

group 'org.entur'
version '0.0.2-mobi-iti-SNAPSHOT'
mainClassName = "io.ktor.server.jetty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

dependencyCheck {
    failBuildOnCVSS = 0 // Specifies if the build should fail for a CVSS score equal to or above the specified level.
    suppressionFiles = ["$projectDir/dependencycheck-base-suppression.xml"]
}

jar {
    manifest {
        attributes 'Main-Class': 'org.entur.lahmu.ApplicationKt'
    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

repositories {
    mavenLocal()
    jcenter()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "io.micrometer:micrometer-registry-prometheus:$micrometer_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "net.logstash.logback:logstash-logback-encoder:6.3"
    implementation "io.ktor:ktor-server-jetty:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-metrics-micrometer:$ktor_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "org.koin:koin-ktor:$koin_version"
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version")
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation "org.koin:koin-test:$koin_version"

}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}